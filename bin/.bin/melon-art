#!/usr/bin/env python3

# Download the album art for an album on MelOn

import argparse
import re
import urllib.request
import os

def save_album_art(album_url, file_name=False):
    match = re.match("(https?)\:\/\/(www\.)(melon.com)(\/album\/detail.htm\?albumId=)(\d+)", album_url)
    if not match:
        raise Exception("URL must be a valid MelOn album link")

    album_identifier = album_url.split('=')[1]
    album_identifier_a = album_identifier[0:3]
    album_identifier_b = album_identifier[3:5]
    album_identifier_c = album_identifier[5:8]

    if file_name:
        album_art_name = file_name + ".jpg"
    else:
        album_art_name = album_identifier + ".jpg"

    album_art_url = "http://cdnimg.melon.co.kr/cm/album/images/" + album_identifier_a + "/" + album_identifier_b + "/" + album_identifier_c + "/" + album_identifier + "_org.jpg"

    if os.path.isfile(album_art_name):
        print("album art already exists.")
    else:
        try:
            urllib.request.urlretrieve(album_art_url, album_art_name)
        except:
            print("album art download failed.")
            os.remove(album_art_name)

    print("album art saved.")


def parse_args():
    parser = argparse.ArgumentParser(prog='melon-art')
    parser.add_argument("url", type=str, help="MelOn album URL")
    parser.add_argument('-f', '--folder', help="Save album art as folder.jpg", default=False, action='store_true')
    parser.add_argument('-c', '--cover', help="Save album art as cover.jpg", default=False, action='store_true')
    return parser.parse_args()


def main():
    args = parse_args()
    if args.folder:
        save_album_art(args.url, "folder")
    elif args.cover:
        save_album_art(args.url, "cover")
    else:
        save_album_art(args.url)


if __name__ == '__main__':
    main()
